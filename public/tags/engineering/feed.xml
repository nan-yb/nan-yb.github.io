
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>ben.codes</title>
      <link>https://ben.codes/blog</link>
      <description>My thoughts on software development</description>
      <language>en-us</language>
      <managingEditor>me@ben.codes (Benoit Tremblay)</managingEditor>
      <webMaster>me@ben.codes (Benoit Tremblay)</webMaster>
      <lastBuildDate>Thu, 27 Apr 2023 00:00:00 GMT</lastBuildDate>
      <atom:link href="https://ben.codes/tags/engineering/feed.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://ben.codes/blog/over-engineering</guid>
    <title>Your Greatest Mistake of Over-Engineering</title>
    <link>https://ben.codes/blog/over-engineering</link>
    <description>Iâ€™ve been guilty of over-engineering a lot. Over-engineering is fun, it makes you learn, it makes you grow. It lets you explore things that would not have been possible otherwise. When used with a fun side project or a proof of concept that is not business critical and it turns out bad, no harm no foul. However, when you are working on something that is very important for your company or client, it must be treated very carefully.</description>
    <pubDate>Thu, 27 Apr 2023 00:00:00 GMT</pubDate>
    <author>me@ben.codes (Benoit Tremblay)</author>
    <category>engineering</category>
  </item>

    </channel>
  </rss>
