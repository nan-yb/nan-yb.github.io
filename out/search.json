[{"title":"Open Sourcing Libraries Made Me A Better Developer","date":"2023-08-22T00:00:00.000Z","tags":["open source"],"draft":false,"summary":"I was lucky enough to make my first open source contribution at my job early on. While I was working on a R&D project to convert a video game engine from C++ to WebGL in 2011, I was using an open source tool to automate that process. I was building a prototype and hit a bug. By looking at the source code, I was able to pinpoint the issue, opened a pull request and it was swiftly merged into the library.","images":["/static/images/banners/open-sourcing.png"],"type":"Blog","readingTime":{"text":"5 min read","minutes":4.5,"time":270000,"words":900},"slug":"open-sourcing","path":"blog/open-sourcing","filePath":"blog/open-sourcing.mdx","toc":[{"value":"My “Random” Success","url":"#my-random-success","depth":2},{"value":"The 3 Main Benefits of Open Sourcing","url":"#the-3-main-benefits-of-open-sourcing","depth":2},{"value":"Will This Burn Me Out?","url":"#will-this-burn-me-out","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Open Sourcing Libraries Made Me A Better Developer","datePublished":"2023-08-22T00:00:00.000Z","dateModified":"2023-08-22T00:00:00.000Z","description":"I was lucky enough to make my first open source contribution at my job early on. While I was working on a R&D project to convert a video game engine from C++ to WebGL in 2011, I was using an open source tool to automate that process. I was building a prototype and hit a bug. By looking at the source code, I was able to pinpoint the issue, opened a pull request and it was swiftly merged into the library.","url":"https://ben.codes/blog/open-sourcing"}},{"title":"Your Greatest Mistake of Over-Engineering","date":"2023-04-27T00:00:00.000Z","tags":["engineering"],"draft":false,"summary":"I’ve been guilty of over-engineering a lot. Over-engineering is fun, it makes you learn, it makes you grow. It lets you explore things that would not have been possible otherwise. When used with a fun side project or a proof of concept that is not business critical and it turns out bad, no harm no foul. However, when you are working on something that is very important for your company or client, it must be treated very carefully.","type":"Blog","readingTime":{"text":"10 min read","minutes":9.245,"time":554700,"words":1849},"slug":"over-engineering","path":"blog/over-engineering","filePath":"blog/over-engineering.mdx","toc":[{"value":"Bootstrapping a Startup","url":"#bootstrapping-a-startup","depth":2},{"value":"Code Design Over-Engineering","url":"#code-design-over-engineering","depth":2},{"value":"Tooling Over-Engineering","url":"#tooling-over-engineering","depth":2},{"value":"Infrastructure Over-Engineering","url":"#infrastructure-over-engineering","depth":2},{"value":"Keep It Simple, But Not Too Much","url":"#keep-it-simple-but-not-too-much","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Your Greatest Mistake of Over-Engineering","datePublished":"2023-04-27T00:00:00.000Z","dateModified":"2023-04-27T00:00:00.000Z","description":"I’ve been guilty of over-engineering a lot. Over-engineering is fun, it makes you learn, it makes you grow. It lets you explore things that would not have been possible otherwise. When used with a fun side project or a proof of concept that is not business critical and it turns out bad, no harm no foul. However, when you are working on something that is very important for your company or client, it must be treated very carefully.","image":"/static/images/twitter-card.png","url":"https://ben.codes/blog/over-engineering"}}]